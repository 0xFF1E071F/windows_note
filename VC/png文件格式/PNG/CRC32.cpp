// CRC32.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "malloc.h"
void *zalloc( void *pOpaque, unsigned int nItems, unsigned int nSize )
{
	return malloc( nItems * nSize );
}
void zfree( void *pOpaque, void *pVoid )
{
	free( pVoid );
}

int main(int argc, char* argv[])
{
	CCalcCRC32 calc;
	unsigned char szData[] = { '\x049','\x048','\x044','\x052',
					  '\x000','\x000','\x000','\x076','\x000','\x000','\x000','\x044','\x008','\x000','\x000','\x000','\x000','\x071','\x07e','\x09e','\x06b'};
	unsigned long dwCRC32;// = crc32( 0, szData, 0x11);
	dwCRC32 = calc.GetCRC32( szData, 0x11 );

	CIHDRChunk ihdr;
	CIENDChunk iend;
	CpHYsChunk phys;
	CIDATChunk idat;
	ihdr.SetValue( 0x10, 0x10, 0x2, 0, 0, 0, 0 );
	unsigned char szBuf[400];
	ihdr.GetChunk( szBuf, 100 );
	iend.GetChunk( szBuf, 100 );
	phys.GetChunk( szBuf, 100 );
	
	unsigned long ulLen, ulDstLen;
	ulLen = idat.GetChunk( szBuf, 100 );

	unsigned char szDstBuf[400];
	ulDstLen = 100l;
	
	unsigned char szTest[] = {
		0x78, 0x9c, 0x7d, 0x8e, 0x41, 0x0a, 0x00, 0x30, 0x08, 0xc3, 0x7c, 0x5a, 0x9e, 0xe6, 0xcf, 0xb3,
		0xc3, 0x06, 0xea, 0x06, 0xeb, 0x45, 0x08, 0x35, 0x34, 0x34, 0x7a, 0x0c, 0x8d, 0xac, 0x0c, 0x00,
		0x14, 0x60, 0xa3, 0x1b, 0xe4, 0x00, 0xb4, 0x17, 0xb8, 0x1a, 0x0f, 0x38, 0x46, 0x92, 0xff, 0x8e,
		0xe1, 0x48, 0xe8, 0x3b, 0x60, 0x7b, 0x6b, 0x18, 0x7f, 0x87, 0xaa, 0x79, 0xae, 0x0b, 0xcb, 0xeb,
		0x81, 0x45 };

	unsigned char szTest1[] = {
		0x78, 0x9c, 0x7d, 0x8e, 0x41, 0x0a, 0x00, 0x30, 0x08, 0xc3, 0x7c, 0x5a, 0x9e, 0xe6, 0xcf, 0xb3,
		0xc3, 0x06, 0xea, 0x06, 0xeb, 0x45, 0x08, 0x35, 0x34, 0x34, 0x7a, 0x0c, 0x8d, 0xac, 0x0c, 0x00,
		0x14, 0x60, 0xa3, 0x1b, 0xe4, 0x00, 0xb4, 0x17, 0xb8, 0x1a, 0x0f, 0x38, 0x46, 0x92, 0xff, 0x8e,
		0xe1, 0x48, 0xe8, 0x3b, 0x60, 0x7b, 0x6b, 0x18, 0x7f, 0x87, 0xaa, 0x79, 0xae, 0x0b, 0xcb, 0xeb,
		0x81, 0x45 };

	unsigned char szTest2[] = {
		0x00, 0xf0, 0x00, 0x00, 0x03,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf2, 0x22, 0x25, 0x43,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf0, 0x00, 0x00, 0x03,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf2, 0x22, 0x25, 0x43,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf0, 0x00, 0x00, 0x03,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf2, 0x22, 0x25, 0x43,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf0, 0x00, 0x00, 0x03,
		0x00, 0xf2, 0x22, 0x22, 0x23,
		0x00, 0xf2, 0x22, 0x25, 0x43,
		0x00, 0xf2, 0x22, 0x22, 0x23 };

	int nRet;
	ulLen = 400;
	z_stream stream;
	stream.next_in = szTest;
	stream.avail_in = 0x42;
	stream.next_out = szBuf;
	stream.avail_out = 400;
	stream.zalloc = Z_NULL;
	stream.zfree = Z_NULL;
	stream.opaque = NULL;
	nRet = inflateInit( &stream );
	stream.next_in = szTest;
	stream.avail_in = 0x42;
	stream.next_out = szBuf;
	stream.avail_out = 300;
	nRet = inflate( &stream, 5 );

	stream.next_in = szBuf;
	stream.avail_in = 0x110;
	stream.next_out = szDstBuf;
	stream.avail_out = 400;
 
	nRet = deflateInit( &stream, Z_DEFAULT_COMPRESSION );
	nRet = deflate( &stream, Z_SYNC_FLUSH );
	nRet = uncompress( szBuf, &ulLen, szTest, 0x42 );
	ulDstLen = 400;
	nRet = compress( szDstBuf, &ulDstLen, szTest2, 80 );
	ulLen = 400;

	idat.SetChunkData( szDstBuf, ulDstLen );
	idat.SetBitmap( "d:\\profiles\\ftem029\\my documents\\my pictures\\5.bmp", 2 );
	ulLen = idat.GetChunk( szBuf, 100 );

	nRet = uncompress( szBuf, &ulLen, szDstBuf, ulDstLen );
	ulLen = 100;
	
	CPNGFile png;
	png.CreatePNGFromBMP( "d:\\profiles\\ftem029\\my documents\\my pictures\\mairumaichu.bmp", "d:\\profiles\\ftem029\\my documents\\my pictures\\5.png", 2 );
	return 0;
}

