#include "stdafx.h"
#include <windows.h>

BOOL
HideDebugger(
			 HANDLE hThread,
			 HANDLE hProcess)
{
    CONTEXT ctx;
    LDT_ENTRY sel;
    DWORD fs;
    DWORD peb;
    SIZE_T bytesrw;
    WORD flag;
    ctx.ContextFlags = CONTEXT_SEGMENTS;
    if (!GetThreadContext(hThread, &ctx))
        return FALSE;
    if (!GetThreadSelectorEntry(hThread, ctx.SegFs, &sel))
        return FALSE;
    fs = (sel.HighWord.Bytes.BaseHi << 8 | sel.HighWord.Bytes.BaseMid) << 16 |
        sel.BaseLow;    
    if (!ReadProcessMemory(hProcess, (LPCVOID)(fs + 0x30), &peb, 4, &bytesrw) ||
        bytesrw != 4)
        return FALSE;
    if (!ReadProcessMemory(hProcess, (LPCVOID)(peb + 0x2), &flag, 2, &bytesrw) ||
        bytesrw != 2)
        return FALSE;
    flag = 0;
    if (!WriteProcessMemory(hProcess, (void *)(peb + 0x2), &flag, 2, &bytesrw) ||
        bytesrw != 2)
        return FALSE;
    return TRUE;
}
DWORD WINAPI ThreadProc(
						LPVOID lpParameter   // thread data
)
{
	while (1)
	{
		Sleep(1000);
		printf(".");
	}
		
	return 0;
}
int main(int argc, char* argv[])
{
	DWORD threadid;
	HANDLE Hthread = CreateThread(NULL,0,ThreadProc,NULL,0,&threadid);

	HANDLE Hprocess = GetCurrentProcess();

	HideDebugger(Hthread,Hprocess);

	WaitForSingleObject(Hthread,INFINITE);
	CloseHandle(Hthread);
	return 0;
}